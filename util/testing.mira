# For testing scripts on mira
if [[ -z ${testing_state+X} ]];then declare -r testing_state="$gcd_WORKDIR/testing.$COBALT_JOBID.state";fi
rm -rf "$testing_state"
test-part-save(){ local -i i
	for((i=0;i<${#test_boot_sizes[@]};++i));do
		echo ${test_boot_sizes[i]} ${test_boot_sizes_n[i]} ${test_free_sizes_n[i]}
	done>"$testing_state"
}
test-part-load(){
	test_boot_available=$COBALT_JOBSIZE
	test_boot_sizes=()
	test_boot_sizes_n=()
	test_free_sizes_n=()
	[[ -s $testing_state ]] || return
	local -i s n f
	while read s n f;do
		test_boot_sizes+=($s)
		test_boot_sizes_n+=($n)
		test_free_sizes_n+=($f)
		((test_boot_available-=s*(n-f)))
	done<"$testing_state"
}
get-bootable-blocks_(){
	gcd-log 1 "get-bootable-blocks $*" >&2
	local -ai test_boot_sizes test_boot_sizes_n test_free_sizes_n
	local -i test_boot_available
	test-part-load >&2
	local -i s
	while(($#>0));do case $1 in
		--size)s=$2;shift 2;;
		--*)echo "Testing '$1' not supported" >&2;exit 1;;
		*)shift;;
	esac;done
	((test_boot_available<s)) && return 1
	local -i n i j
	((n=test_boot_available/s))
	for((i=0;i<${#test_boot_sizes[@]};++i));do((test_boot_sizes[i]==s))&&break;done
	local b
	if((i==${#test_boot_sizes[@]}));then
		test_boot_sizes[i]=s
		test_boot_sizes_n[i]=0
		test_free_sizes_n[i]=0
		for((j=0;j<n;++j));do b+=" $s-$j";done
	else
		for((j=test_boot_sizes_n[i];j<n+test_boot_sizes_n[i];++j));do b+=" $s-$j";done
	fi
	gcd-log 1 "bootable-blocks $b" >&2
	echo $b
	test-part-save >&2
}
get-bootable-blocks(){ gcd-lock "$testing_state.lock" get-bootable-blocks_ "$@";}
boot-block_(){
	gcd-log 1 "boot-block $*"
	local -ai test_boot_sizes test_boot_sizes_n test_free_sizes_n
	local -i test_boot_available
	test-part-load
	local b o=b
	while(($#>0));do case $1 in
		--block)b="$2";shift 2;;
		--free)o=f;shift;;
		--reboot)o=r;shift;;
		*)echo "Testing '$1' not supported" >&2;exit 1;;
	esac;done
	local -i i s=${b%-*}
	case $o in
		b)for((i=0;i<${#test_boot_sizes[@]};++i));do if((test_boot_sizes[i]==s));then((++test_boot_sizes_n[i]));break;fi;done;;
		f)for((i=0;i<${#test_boot_sizes[@]};++i));do if((test_boot_sizes[i]==s));then((++test_free_sizes_n[i]));break;fi;done;;
	esac
	test-part-save
}
boot-block(){ gcd-lock "$testing_state.lock" boot-block_ "$@";}
runjob(){ gcd-info "runjob $*";gcd-log 1 "runjob" declare -p >&2;sleep $((4+RANDOM%4));gcd-info "DONE runjob $*";}
qstat(){ true;}
qsub(){ gcd-log 0 "running qsub: $*";}
at(){ gcd-log 1 "at called with $*";local l;while read l;do gcd-log 1 "at got command: $l";done;}
